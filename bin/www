#!/usr/bin/env node

var app = require('../server/server');
var debug = require('debug')('flightfox:server');
var http = require('http');
var clusterEvents = require('../server/services/clusterEvents');

var port = normalizePort(process.env.PORT || '3000');
app.set('port', port);

var server = http.createServer(app);
var io = require('socket.io').listen(server);
app.IOConnection = require('../server/services/socket.js')(io);


server.listen(port, function () {
    clusterEvents.register(server, app.IOConnection, console.log);
});

server.on('listening', onListening);

function normalizePort(val) {
    var port = parseInt(val, 10);

    if (isNaN(port)) {
        // named pipe
        return val;
    }

    if (port >= 0) {
        // port number
        return port;
    }

    return false;
}

function onListening() {
    var addr = server.address();
    var bind = typeof addr === 'string'
        ? 'pipe ' + addr
        : 'port ' + addr.port
    ;

    debug('Listening on ' + bind);
}